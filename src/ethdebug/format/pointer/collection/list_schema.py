# generated by datamodel-codegen:
#   filename:  pointer/collection/list.schema.yaml

from __future__ import annotations

from pydantic import BaseModel, ConfigDict, Field

from ... import pointer_schema
from .. import expression_schema, identifier_schema


class List(BaseModel):
    count: expression_schema.EthdebugFormatPointerExpression = Field(
        ..., description='The size of the list that this collection represents.\n'
    )
    each: identifier_schema.EthdebugFormatPointerIdentifier = Field(
        ...,
        description='An identifier name whose value as an expression resolves to the index\nin the list\n',
    )
    is_: pointer_schema.EthdebugFormatPointer = Field(
        ...,
        alias='is',
        description='The dynamically-generated pointer repeated as a list\n',
    )


class EthdebugFormatPointerCollectionList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    list: List
