# generated by datamodel-codegen:
#   filename:  pointer/collection/list.schema.yaml
#   timestamp: 2025-05-02T06:59:03+00:00

from __future__ import annotations

from pydantic import BaseModel, ConfigDict, Field

from ..region import base_schema, calldata_schema
from . import conditional_schema


class List(BaseModel):
    count: calldata_schema.Expression = Field(
        ..., description='The size of the list that this collection represents.\n'
    )
    each: base_schema.Identifier = Field(
        ...,
        description='An identifier name whose value as an expression resolves to the index\nin the list\n',
    )
    is_: conditional_schema.Pointer = Field(
        ...,
        alias='is',
        description='The dynamically-generated pointer repeated as a list\n',
    )


class EthdebugFormatPointerCollectionList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    list: List
