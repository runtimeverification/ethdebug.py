# generated by datamodel-codegen:
#   filename:  pointer/collection/scope.schema.yaml

from __future__ import annotations

from typing import Annotated, Dict

from pydantic import BaseModel, ConfigDict, Field

from ...pointer_schema import Pointer
from ..expression_schema import PointerExpression


class PointerCollectionScope(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    define: Annotated[
        Dict[str, PointerExpression],
        Field(title='Mapping of variables to expression value'),
    ]
    in_: Annotated[Pointer, Field(alias='in')]
