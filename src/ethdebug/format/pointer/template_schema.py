# generated by datamodel-codegen:
#   filename:  pointer/template.schema.yaml
#   timestamp: 2025-05-02T06:59:03+00:00

from __future__ import annotations

from typing import List

from pydantic import BaseModel, ConfigDict, Field

from .collection import conditional_schema
from .region import base_schema


class EthdebugFormatPointerTemplate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    expect: List[base_schema.Identifier] = Field(
        ...,
        description='An array of variable identifiers used in the definition of the\npointer template.\n',
        title='Template variables',
    )
    for_: conditional_schema.Pointer = Field(..., alias='for')
