# generated by datamodel-codegen:
#   filename:  pointer/template.schema.yaml

from __future__ import annotations

from typing import List

from pydantic import BaseModel, ConfigDict, Field

from .. import pointer_schema
from . import identifier_schema


class EthdebugFormatPointerTemplate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    expect: List[identifier_schema.EthdebugFormatPointerIdentifier] = Field(
        ...,
        description='An array of variable identifiers used in the definition of the\npointer template.\n',
        title='Template variables',
    )
    for_: pointer_schema.EthdebugFormatPointer = Field(..., alias='for')
