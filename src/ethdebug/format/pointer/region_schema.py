# generated by datamodel-codegen:
#   filename:  pointer/region.schema.yaml

from __future__ import annotations

from typing import Union

from pydantic import Field, RootModel

from .region import (
    calldata_schema,
    code_schema,
    memory_schema,
    returndata_schema,
    stack_schema,
    storage_schema,
    transient_schema,
)


class EthdebugFormatPointerRegion(
    RootModel[
        Union[
            stack_schema.EthdebugFormatPointerRegionStack,
            memory_schema.EthdebugFormatPointerRegionMemory,
            storage_schema.EthdebugFormatPointerRegionStorage,
            calldata_schema.EthdebugFormatPointerRegionCalldata,
            returndata_schema.EthdebugFormatPointerRegionReturndata,
            transient_schema.EthdebugFormatPointerRegionTransient,
            code_schema.EthdebugFormatPointerRegionCode,
        ]
    ]
):
    root: Union[
        stack_schema.EthdebugFormatPointerRegionStack,
        memory_schema.EthdebugFormatPointerRegionMemory,
        storage_schema.EthdebugFormatPointerRegionStorage,
        calldata_schema.EthdebugFormatPointerRegionCalldata,
        returndata_schema.EthdebugFormatPointerRegionReturndata,
        transient_schema.EthdebugFormatPointerRegionTransient,
        code_schema.EthdebugFormatPointerRegionCode,
    ] = Field(
        ...,
        description='A representation of a region of data in the EVM\n',
        examples=[
            {
                'location': 'storage',
                'slot': '0x0000000000000000000000000000000000000000000000000000000000000000',
            }
        ],
        title='ethdebug/format/pointer/region',
    )


EthdebugFormatPointerRegion.model_rebuild()
