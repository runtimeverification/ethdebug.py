# generated by datamodel-codegen:
#   filename:  type/complex/tuple.schema.yaml

from __future__ import annotations

from typing import List, Literal, Optional

from pydantic import BaseModel, Field

from ..wrapper_schema import EthdebugFormatTypeWrapper


class Element(EthdebugFormatTypeWrapper):
    name: Optional[str] = Field(
        None,
        description='For tuple types where positional element types are identified by name, this field **should** include this information.\nThis schema makes no restriction on whether all-or-no elements have names, and so this field may be sparse across elements of the same tuple.',
    )


class EthdebugFormatTypeComplexTuple(BaseModel):
    class_: Literal['complex'] = Field('complex', alias='class')
    kind: Literal['tuple']
    contains: List[Element]
