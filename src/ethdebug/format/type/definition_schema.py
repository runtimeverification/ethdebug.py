# generated by datamodel-codegen:
#   filename:  type/definition.schema.yaml

from __future__ import annotations

from typing import Annotated, Optional, Union

from pydantic import BaseModel, Field, RootModel

from ..materials.source_range_schema import MaterialsSourceRange


class Type_Definition(BaseModel):
    name: str
    location: Optional[MaterialsSourceRange] = None


class TypeDefinition2(BaseModel):
    name: Optional[str] = None
    location: MaterialsSourceRange


class TypeDefinition(RootModel[Union[Type_Definition, TypeDefinition2]]):
    root: Annotated[
        Union[Type_Definition, TypeDefinition2],
        Field(
            description='Object containing name and location information for a type.\n\nThis schema does not require any particular field, but it **must** contain\nat least one property.\n',
            examples=[
                {
                    'name': 'Ballot',
                    'location': {
                        'source': {'id': 5},
                        'range': {'offset': 10, 'length': 56},
                    },
                }
            ],
            title='ethdebug/format/type/definition',
        ),
    ]
