# generated by datamodel-codegen:
#   filename:  info/resources.schema.yaml

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, Field

from .. import type_schema
from ..materials import compilation_schema
from ..pointer import template_schema


class EthdebugFormatInfoResources(BaseModel):
    types: Dict[str, type_schema.EthdebugFormatType] = Field(
        ...,
        description='A collection of types by name identifier.\n',
        title='Types by name',
    )
    pointers: Dict[str, template_schema.EthdebugFormatPointerTemplate] = Field(
        ...,
        description='A collection of pointer templates by name identifier.\n',
        title='Pointer templates by name',
    )
    compilation: Optional[compilation_schema.EthdebugFormatMaterialsCompilation] = None
