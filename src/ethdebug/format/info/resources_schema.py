# generated by datamodel-codegen:
#   filename:  info/resources.schema.yaml

from __future__ import annotations

from typing import Annotated, Dict, Optional

from pydantic import BaseModel, Field

from ..materials.compilation_schema import MaterialsCompilation
from ..pointer.template_schema import PointerTemplate
from ..type_schema import Type


class InfoResources(BaseModel):
    types: Annotated[
        Dict[str, Type],
        Field(
            description='A collection of types by name identifier.\n',
            title='Types by name',
        ),
    ]
    pointers: Annotated[
        Dict[str, PointerTemplate],
        Field(
            description='A collection of pointer templates by name identifier.\n',
            title='Pointer templates by name',
        ),
    ]
    compilation: Optional[MaterialsCompilation] = None


InfoResources.model_rebuild()
