# generated by datamodel-codegen:
#   filename:  materials/source-range.schema.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field

from ..data import value_schema
from . import reference_schema


class Range(BaseModel):
    offset: value_schema.EthdebugFormatDataValue = Field(
        ..., description='Byte offset at beginning of range.\n'
    )
    length: value_schema.EthdebugFormatDataValue = Field(
        ..., description='Number of bytes contained in range'
    )


class EthdebugFormatMaterialsSourceRange(BaseModel):
    compilation: Optional[reference_schema.EthdebugFormatMaterialsReference] = Field(
        None, title='Compilation reference by ID'
    )
    source: reference_schema.EthdebugFormatMaterialsReference = Field(
        ..., title='Source reference by ID'
    )
    range: Optional[Range] = Field(
        None,
        description='Ranges that span the entire source contents **may** omit this field\nas a shorthand. This field is otherwise **required**.\n',
        title='Bytes range within source contents',
    )
