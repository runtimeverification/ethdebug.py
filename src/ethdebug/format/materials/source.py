# generated by datamodel-codegen:
#   filename:  source.schema.yaml
#   timestamp: 2025-04-11T18:30:32+00:00

from __future__ import annotations

from typing import Optional, Union

from pydantic import BaseModel, Field, RootModel


class Id(RootModel[Union[float, str]]):
    root: Union[float, str] = Field(
        ...,
        description='An opaque external ID (likely generated by compiler)',
        examples=[5, 'five'],
        title='ethdebug/format/materials/id',
    )


class EthdebugFormatMaterialsSource(BaseModel):
    id: Id = Field(
        ...,
        description='Source identifier. This field **must** be unique for all sources\nwithin a single compiler invocation (compilation).\n',
    )
    path: str = Field(
        ...,
        description='Hierarchical file-system-like path to this source. This value may\nbe an absolute path, a path relative to some root directory, a path\nto some resource within a package, etc.\n\nThis value does not need to correspond to any file on disk (either\nphysical or virtual), and might instead refer to a path identifier\nfor a source that was generated by a compiler or other development tool.\n\nThis format makes no specific restrictions on how paths should be\nspecified (e.g., no restriction on path separators, etc.), other than\nthat values for this field should match what users observe elsewhere for\nthe inputs/outputs of this particular compiler invocation.\n\nIf no path information is available for a particular source, e.g. if the\nsource was provided to the compiler via shell standard input, this field\nshould indicate that somehow (e.g., specifying `"path": "stdin"` or\nsimilar).\n\nThis field\'s value **should** be unique across all sources within the\nsame compilation.\n',
    )
    contents: str = Field(
        ...,
        description='The full contents of the source, possibly re-encoded as UTF-8 to\nmatch parent JSON encoding.\n\nIn cases where input source used a different encoding, this object\n**must** also specify an `encoding` property to indicate the\nencoding originally used. Where relevant, debuggers **must** also\nconvert these `contents` back to the specified original encoding so\nas to match code author expectations.\n',
    )
    encoding: Optional[str] = Field(
        None,
        description='Character encoding of original source `contents`. This property\nis **required** if this encoding does not match the JSON transmission\nencoding (UTF-8), since the value of the `contents` property will\nrepresent the text of the source of this JSON encoding.\n\nThis property **must not** appear in objects that do not specify\na `contents` property.\n',
    )
    language: str = Field(
        ...,
        description='The high-level language that the source contents are written in.\n',
    )
